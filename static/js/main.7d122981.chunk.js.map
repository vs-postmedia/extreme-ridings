{"version":3,"sources":["components/RidingCard/images/test-01.png","components/ExtremeRidings/images/map.jpg","components/DropdownMenu/DropdownMenu.js","components/ButtonRow/ButtonRow.js","components/RidingCard/RidingCard.js","components/RidingResults/RidingResults.js","components/ExtremeRidings/ExtremeRidings.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DropdownMenu","props","react_default","a","createElement","react_select_browser_esm","className","defaultValue","options","onChange","placeholder","ButtonRow","buttons","map","d","id","toLowerCase","key","onClick","RidingCard","data","stat","variable_pct","parseFloat","toFixed","variable_total","avg_age","avg_family_size","riding_name","src","locator","alt","variable_desc","concat","RidingResults","settings","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","centerMode","centerPadding","highValues","ridingData","filter","high_value","lowValues","react","policyCopy","lib_default","Object","assign","card","components_RidingCard_RidingCard","riding_id","ExtremeRidings","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentCategory","currentData","currentParty","buttonClickHandler","bind","assertThisInitialized","selectChangeHandler","inherits","createClass","value","setState","setPolicyCopy","PolicyData","_this2","displayParty","categories","RidingData","category","val","party","policy_short","components_DropdownMenu_DropdownMenu","components_ButtonRow_ButtonRow","parties","components_RidingResults_RidingResults","Component","label","App","components_ExtremeRidings_ExtremeRidings","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d122981.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test-01.c721d5a9.png\";","module.exports = __webpack_public_path__ + \"static/media/map.3f86fefa.jpg\";","import React from 'react';\nimport Select from 'react-select';\nimport './DropdownMenu.css';\n\nconst DropdownMenu = (props) => {\n\treturn (\n\t\t<Select \n\t\t\tclassName=\"dropdown\"\n\t\t\tdefaultValue={props.options[0]}\n\t\t\tonChange={props.onChange} \n\t\t\toptions={props.options}\n\t\t\tplaceholder={props.placeholder}/>\n\t);\n}\n\nexport default DropdownMenu;","import React from 'react';\nimport './ButtonRow.css';\n\nconst ButtonRow = (props) => {\n\treturn (\n\t\t<div className=\"button-row\">\n\t\t{\n\t\t\tprops.buttons.map(d => {\n\t\t\t\tconst id = d.toLowerCase();\n\t\t\t\treturn <button \n\t\t\t\t\tkey={id}\n\t\t\t\t\tid={id}\n\t\t\t\t\tonClick={() => props.onClick(id)}\n\t\t\t\t>\n\t\t\t\t\t{d}\n\t\t\t\t</button>\n\t\t\t})\n\t\t}\n\t\t</div>\n\t);\n}\n\nexport default ButtonRow;","import React from 'react';\nimport './RidingCard.css';\n\nimport locator from './images/test-01.png';\n\nconst RidingCard = (props) => {\n\tconst data = props.data;\n\n\tconst stat = data.variable_pct ? parseFloat(data.variable_pct).toFixed(1) + '%' : data.variable_total;\n\n\tdata.avg_age = 48;\n\tdata.avg_family_size = 2.4;\n\n\treturn (\n\t\t<li className=\"riding-card\">\n\t\t\t<header>\n\t\t\t\t<h3>{data.riding_name}</h3>\n\t\t\t\t<p className=\"subhead\">B.C.</p>\n\t\t\t</header>\n\t\t\t\n\t\t\t<div className=\"gfx\">\n\t\t\t\t<p className=\"percent\">{stat}</p>\n\t\t\t\t<img className=\"map\" src={locator} alt=\"locator map\"/>\n\t\t\t</div>\n\t\t\t<div className=\"copy\">\n\t\t\t\t<p className=\"variable-description\">{data.variable_desc}</p>\n\t\t\t\t<p className=\"detail\"><strong>Average...</strong></p>\n\t\t\t\t<p className=\"detail\">{`Age: ${data.avg_age}`}</p>\n\t\t\t\t<p className=\"detail\">{`Family size: ${data.avg_family_size}`}</p>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t<div className=\"eln-results\">\t\n\t\t\t\t\t<p className=\"subhead\">Vote history</p>\n\t\t\t\t\t<div className=\"swatch liberal\"></div>\n\t\t\t\t\t<p className=\"eln-year\">’15</p>\n\t\t\t\t\t<div className=\"swatch conservative\"></div>\n\t\t\t\t\t<p className=\"eln-year\">’11</p>\n\t\t\t\t\t<div className=\"swatch conservative\"></div>\n\t\t\t\t\t<p className=\"eln-year\">’08</p>\n\t\t\t\t\t<div className=\"swatch ndp\"></div>\n\t\t\t\t\t<p className=\"eln-year\">’06</p>\n\t\t\t\t</div>\n\t\t</li>\n\t)\n}\n\nexport default RidingCard;\n\n// <img className=\"map\" src=\"https://via.placeholder.com/150x150\" />","import React, { Fragment } from 'react';\nimport Slider from 'react-slick';\nimport RidingCard from '../RidingCard/RidingCard';\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './RidingResults.css';\n\n\nconst RidingResults = (props) => {\n\tconst settings = {\n\t\t// centerMode: false,\n\t\t// centerPadding: '10px',\n\t\tdots: false,\n\t\tinfinite: false,\n\t\tspeed: 500,\n\t\tslidesToShow: 2,\n\t\tslidesToScroll: 2,\n\t\tresponsive: [\n\t\t\t{\n\t\t\t\tbreakpoint: 480,\n\t\t\t\tsettings: {\n\t\t\t\t\tcenterMode: true,\n\t\t\t\t\tcenterPadding: '30px',\n\t\t\t\t\tslidesToShow: 1,\n\t\t\t\t\tslidesToScroll: 1\n\t\t\t\t}\n\t\t\t}\n\t\t]\n    };\n\n    const highValues = props.ridingData.filter(d => d.high_value === 'TRUE');\n\tconst lowValues = props.ridingData.filter(d => d.high_value === 'FALSE');\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<p className=\"text\">{props.policyCopy}</p>\n\n\t\t\t<p className=\"sub-head\">Ridings that could see the most impact</p>\n\t\t\t<Slider className=\"ridings-container\" {...settings}>\n\t\t\t\t{ \n\t\t\t\t\thighValues.map(card => {\n\t\t\t\t\t\treturn <RidingCard key={`affected-${card.riding_id}`} data={card}></RidingCard>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Slider>\n\n\t\t\t<p className=\"sub-head\">Ridings that could see the least impact</p>\n\t\t\t<Slider className=\"ridings-container\" {...settings}>\n\t\t\t\t\n\t\t\t\t{ \n\t\t\t\t\tlowValues.map(card => {\n\t\t\t\t\t\treturn <RidingCard key={`unaffected-${card.riding_id}`} data={card}></RidingCard>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Slider>\n\t\t</Fragment>\n\t)\n}\n\nexport default RidingResults","import React, { Component, Fragment } from 'react';\nimport DropdownMenu from '../DropdownMenu/DropdownMenu';\nimport ButtonRow from '../ButtonRow/ButtonRow';\nimport RidingResults from '../RidingResults/RidingResults';\n\nimport RidingData from '../../data/riding-data.json';\nimport PolicyData from '../../data/party-policy.json';\n\nimport './ExtremeRidings.css';\nimport map from './images/map.jpg';\n\nexport class ExtremeRidings extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.buttonClickHandler = this.buttonClickHandler.bind(this);\n\t\tthis.selectChangeHandler = this.selectChangeHandler.bind(this);\n\t}\n\tstate = {\n\t\tcurrentCategory: null,\n\t\tcurrentData: [],\n\t\tcurrentParty: null,\n\t\tdata: [],\n\t\tpolicyCopy: ''\n\t}\n\n\tbuttonClickHandler(id) {\n\t\tthis.setState({\n\t\t\tcurrentParty: id,\n\t\t\tpolicyCopy: this.setPolicyCopy(PolicyData, id, this.state.currentCategory)\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst currentParty = this.props.displayParty || 'lpc';\n\t\tconst currentCategory = this.props.categories[0].value;\n\n\t\tthis.setState({\n\t\t\tcurrentCategory: currentCategory,\n\t\t\tcurrentData: RidingData.filter(d => d.category === this.props.categories[0].value),\n\t\t\tcurrentParty: currentParty,\n\t\t\tdata: RidingData,\n\t\t\tpolicyCopy: this.setPolicyCopy(PolicyData, currentParty, currentCategory)\n\t\t});\n\t}\n\n\tselectChangeHandler(val) {\n\t\tthis.setState({\n\t\t\tcurrentCategory: val.value,\n\t\t\tcurrentData: RidingData.filter(d => d.category === val.value),\n\t\t\tpolicyCopy: this.setPolicyCopy(PolicyData, this.state.currentParty, val.value)\n\t\t});\n\t}\n\n\tsetPolicyCopy(data, id, category) {\n\t\tconst copy = data.filter(d => {\n\t\t\treturn d.party === id && d.category === category;\n\t\t});\n\n\t\treturn copy[0].policy_short;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<DropdownMenu \n\t\t\t\t\tonChange={this.selectChangeHandler}\n\t\t\t\t\toptions={this.props.categories}\n\t\t\t\t></DropdownMenu>\n\t\t\t\t<ButtonRow\n\t\t\t\t\tbuttons={this.props.parties}\n\t\t\t\t\tonClick={this.buttonClickHandler}>\n\t\t\t\t</ButtonRow>\n\t\t\t\t<div className=\"map-container\">\n\t\t\t\t\t<img className=\"map\" src={map} alt=\"background-map\" />\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<RidingResults\n\t\t\t\t\tridingData={this.state.currentData}\n\t\t\t\t\tpolicyCopy={this.state.policyCopy}>\n\t\t\t\t</RidingResults>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default ExtremeRidings;","import React from 'react';\nimport ExtremeRidings from '../ExtremeRidings/ExtremeRidings';\nimport './App.css';\n\n\nconst categories = [\n\t{ value: 'families', label: 'Families' },\n\t{ value: 'income', label: 'Income' },\n\t{ value: 'housing', label: 'Housing' },\n\t{ value: 'transit', label: 'Transportation' }\n];\nconst parties = ['LPC', 'CPC', 'NDP', 'GPC'];\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<ExtremeRidings \n\t  \t\t\tcategories={categories} \n\t  \t\t\tdisplayParty=\"ndp\"\n\t  \t\t\tparties={parties}>\n\t  \t\t</ExtremeRidings>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}